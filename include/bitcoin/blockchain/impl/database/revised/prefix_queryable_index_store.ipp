/**
 * Copyright 2011-2015
 *
 * Modified from https://github.com/BoostGSoC13/boost.trie
 *
 * Distributed under the Boost Software License, Version 1.0.
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef LIBBITCOIN_PREFIX_QUERYABLE_INDEX_STORE_IPP
#define LIBBITCOIN_PREFIX_QUERYABLE_INDEX_STORE_IPP

namespace libbitcoin {
namespace blockchain {
namespace revised_database {

template<typename IndexData>
prefix_queryable_index_store<IndexData>::prefix_queryable_index_store()
    : trie_(
        typename modified_patricia_trie<uint32_t, index_data_type>::structure_node_allocator(),
        typename modified_patricia_trie<uint32_t, index_data_type>::value_node_allocator())
{
}

template<typename IndexData>
prefix_queryable_index_store<IndexData>::~prefix_queryable_index_store()
{
}

template<typename IndexData>
void prefix_queryable_index_store<IndexData>::create()
{
}

template<typename IndexData>
void prefix_queryable_index_store<IndexData>::start()
{
}

template<typename IndexData>
typename prefix_queryable_index_store<IndexData>::index_prefix_query_result_type
    prefix_queryable_index_store<IndexData>::get_prefix(
        const binary_type& prefix) const
{
    auto result = trie_.find_prefixed(prefix);
    return index_prefix_query_result_type(result);
}

template<typename IndexData>
bool prefix_queryable_index_store<IndexData>::remove_equal(
    const binary_type& primary, const secondary_key_type& secondary)
{
    return trie_.remove_equal(primary, secondary);
}

template<typename IndexData>
bool prefix_queryable_index_store<IndexData>::remove_equal(
    const secondary_key_type& secondary)
{
    return trie_.remove_equal(secondary);
}

template<typename IndexData>
typename prefix_queryable_index_store<IndexData>::index_data_result_type
    prefix_queryable_index_store<IndexData>::remove_value(
        index_data_result_type& it)
{
    auto next = trie_.remove_value(it.source_);
    return (index_data_result_type)(next);
}

template<typename IndexData>
void prefix_queryable_index_store<IndexData>::sync()
{
}

} // namespace revised_database
} // namespace blockchain
} // namespace libbitcoin

#endif
